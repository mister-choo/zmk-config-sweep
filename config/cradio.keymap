// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt {
    tapping-term-ms = <120>;
    quick-tap-ms = <160>;
    flavor = "balanced";
    require-prior-idle-ms = <80>;
};

/ {
    behaviors {
        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <120>;
            quick-tap-ms = <160>;
            bindings = <&kp>, <&kp>;

            require-prior-idle-ms = <80>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q          &kp W            &kp E            &kp R         &kp T                &kp Y        &kp U            &kp I             &kp O         &kp P
&hrm LSHIFT A  &hrm LEFT_WIN S  &hrm LEFT_ALT D  &hrm LCTRL F  &kp G                &kp H        &hrm RCTRL J     &hrm RIGHT_ALT K  &hrm RMETA L  &hrm RSHIFT SEMICOLON
&kp Z          &kp X            &kp C            &kp V         &kp B                &kp N        &kp M            &kp COMMA         &kp DOT       &lt 4 SLASH
                                                 &lt 1 ESCAPE  &hrm LSHIFT SPACE    &lt 3 ENTER  &lt 2 BACKSPACE
            >;
        };

        red_layer {
            bindings = <
&kp PRINTSCREEN  &kp TAB       &kp UP_ARROW  &kp LS(TAB)    &none        &none     &kp N7        &kp N8        &kp N9        &kp LA(F4)
&kp LA(LSHIFT)   &kp LEFT      &kp DOWN      &kp RIGHT      &none        &none     &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp NUMBER_0
&caps_word       &kp LC(LEFT)  &none         &kp LC(RIGHT)  &none        &none     &kp N1        &kp NUMBER_2  &kp NUMBER_3  &none
                                             &kp LA(TAB)    &kp SPACE    &kt HOME  &kp END
            >;
        };

        blue_layer {
            bindings = <
&none              &kp LESS_THAN         &kp EQUAL  &kp GREATER_THAN       &none       &none        &kp LEFT_BRACKET  &kp UNDERSCORE  &kp RBKT         &none
&kp DOUBLE_QUOTES  &kp LEFT_PARENTHESIS  &kp MINUS  &kp RIGHT_PARENTHESIS  &kp PLUS    &none        &kp LEFT_BRACE    &kp COLON       &kp RIGHT_BRACE  &kp SQT
&none              &none                 &none      &none                  &none       &none        &none             &none           &none            &none
                                                    &none                  &none       &kp LC(TAB)  &kp LS(LC(TAB))
            >;
        };

        special {
            bindings = <
&none         &none       &none          &none         &none            &none          &none         &none         &lt 5 O   &none
&kp LS(EXCL)  &kp LS(AT)  &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)    &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)  &kp FSLH  &kp BSLH
&none         &none       &kp LS(TILDE)  &none         &none            &none          &none         &kp GRAVE     &none     &none
                                         &none         &none            &none          &none
            >;
        };

        fkeys_layer {
            bindings = <
&none  &kp F1  &kp F2   &kp F3   &kp F4     &none  &none  &none  &none  &none
&none  &kp F5  &kp F6   &kp F7   &kp F8     &none  &none  &none  &none  &none
&none  &kp F9  &kp F10  &kp F11  &kp F12    &none  &none  &none  &none  &none
                        &none    &none      &none  &none
            >;
        };

        tri_layer {
            bindings = <
&sys_reset   &none  &none  &none       &bt BT_SEL 0    &none  &none  &none  &none  &sys_reset
&bootloader  &none  &none  &none       &bt BT_SEL 1    &none  &none  &none  &none  &bootloader
&none        &none  &none  &bt BT_CLR  &bt BT_SEL 2    &none  &none  &none  &none  &none
                           &none       &none           &none  &none
            >;
        };
    };
};
